plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = mc_version + "-" + mod_version
group = maven_group
archivesBaseName = mod_id

String current_date = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
String mvn_auth = System.getenv("MVN_AUTH")

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    maven { url 'https://maven.covers1624.net' }
}

tasks.withType(JavaCompile).configureEach {
    options.deprecation(false)
    options.warnings(false)
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

minecraft {
    mappings channel: 'official', version: '1.20'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'snakerlib'
            mods {
                snakerlib { source sourceSets.main }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'snakerlib', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                snakerlib { source sourceSets.main }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jar.finalizedBy('reobfJar')

jar {
    manifest {
        attributes(
                [
                        "Specification-Title"     : mod_title,
                        "Specification-Vendor"    : mod_author,
                        "Specification-Version"   : mod_version,
                        "Implementation-Title"    : mod_title,
                        "Implementation-Vendor"   : mod_author,
                        "Implementation-Version"  : mod_version,
                        "Implementation-Timestamp": current_date
                ]
        )
    }
}

tasks.register('srcJar', Jar) {
    build.dependsOn it
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

publishing {
    repositories {
        maven {
            url "https://mymavenrepo.com/repo/${mvn_auth}/"
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact srcJar
        }
    }
}

tasks.withType(JavaCompile).configureEach { options.encoding = 'UTF-8' }